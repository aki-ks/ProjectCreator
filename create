#!/bin/bash

# Author: Ruben HÃ¶nle
# GitHub: https://github.com/rubenhoenle/ProjectCreator
# Date: 01.10.2020

CONFIGFILE=config.conf

# some colour variables for the output
RED='\033[0;31m'
GREEN='\033[0;32m'
NOCOLOR='\033[0m'

# Handle given flags
while test $# -gt 1; do
  case "$1" in
    -h|--help)
		echo "Welcome to the help page!"
		# TODO: Add help overview
        exit 0
        ;;
	-p|--public)
	  	shift
		echo "public"
      	;;
  esac
done

function printOK {
	echo -e "[${GREEN}OK${NOCOLOR}] $1"
}

function printError {
	echo -e "[${RED}ERROR${NOCOLOR}] $1"
}

# Check if config file exists, else exit script
if [ -f "$CONFIGFILE" ]; then
    printOK "Config file was found. $CONFIGFILE exists."
else 
    printError "$CONFIGFILE does not exist."
	echo "Stopping programm..."
	exit 1
fi

# Read variables from config file
. $CONFIGFILE

# Check if variables from config file are set
if [ -z ${BaseFolderPath+x} ]; then printError "BaseFolderPath is unset"; else printOK "BaseFolderPath is set to '$BaseFolderPath'"; fi
if [ -z ${username+x} ]; then printError "username is unset"; else printOK "username is set to '$username'"; fi
#if [ -z ${token+x} ]; then printError "token is unset"; else printOK "token is set to '$token'"; fi

# Check if Directory where BaseFolderPath leads to exists
if [ -d "$BaseFolderPath" ]
then
	printOK "BaseFolderPath Directory exists"
else
	printError "Directory $BaseFolderPath doesn't exist."
	echo "Stopping programm..."
	exit 1
fi

if [ -d "$BaseFolderPath/$1" ] 
then
    printError "Directory $BaseFolderPath$1 already exists."
	echo "Stopping programm..."
	exit 1 
fi

echo "Do you want to make this GitHub Repository private? (yes/no)"
select yn in "Yes" "No"; do
    case $yn in
        Yes ) echo "Repository will be private."; public=false; break;;
        No ) echo "Repository will be public."; public=true; break;;
    esac
done

header="{\"name\":\"$1\",\"description\": \"Some message\", \"homepage\": \"https://github.com\", \"private\": \"true\"}"
echo "$header"
response=$(curl -H "Authorization: token $token" --data $header https://api.github.com/user/repos --silent --output /dev/null --write-out '%{http_code}')

# Check if Login credentials are wrong
if [ $response -eq 401 ]
then
	printError "Unable to login with the GitHub login credentials from the config file."
	echo "Stopping programm..."
	exit 1
else
	printOK "GitHub login successfull."
fi

# Check if a repo with the same name exists already
if [ $response -eq 422 ]
then
	printError "There exists already a repository with the name $1."
	echo "Stopping programm..."
	# TODO: add option to clone this repo or not
	exit 1
else
	printOK "Repository created."
fi

# TODO: HTML 400: Repo not found
# TODO: Alle restlichen HTTP Errors abfangen

echo "${response}"
git clone https://github.com/$username/$1.git 
cd $1
touch README.md
touch .gitignore
git add README.md
git add .gitignore
git commit -a -m "Initial commit"
git push
